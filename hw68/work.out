git_it_dun -- Angela Tom, Bing Li, Brandon Chong
APCS1 pd2
HW68 -- PPMP
2018-01-12

1.  C
2.  B
3.  D
4.  E
5.  E
6.  B
7.  A
8.  D
9.  C
10.  D

11a. 

public int nextTankToFill(int threshold){
    int counter = 0;
    int retInt = filler.getCurrentIndex();
    for (FuelTank x:tanks){
        if(x.getFuelLevel <= threshold){
	retInt = counter;
	break;
	}
	counter ++;
    }
    return retInt;
}

11b.
public void moveToLocation(int locIndex) {
    int place = filler.getCurrentIndex;
    int moves = 0;
    if (place > locIndex){
	moves = place - locIndex;
    } else {
	moves = locIndex - place;
    }
    if (place > locIndex && isFacingRight()){
	filler.changeDirection();
    } else if (place < locIndex && !isFacingRight()){
	filler.changeDirection();
    }
    filler.moveForward(moves);
}

12.
private void fillBlock(String str) {
   int i = 0;
   for (int r = 0; r < numRows; r++) {
       for (int c = 0; c < numColumns; c++) {
       	  letterblock[r][c] = str.substring(i, i+1);
	  if(str.length() < r * c) {
             letterblock[r][c] = "A";
	  } else if (str.length() > r * c) {
	     break;
          }
	  i++;
       }	
   }
}

12b 
public String encryptMessage(String message) {
      String msg = " ";
      int total = numColumns * numRows;
      int call = message.length() / total;
      if(message.equals("")) {
         return msg;
      }
      for (int i = 0; i < call; i++) {
          //instantiate a new letterboard using the constructor;
          String[][] l = new RouteCipher();
          l.fillblock();
	  for(int c = 0; c < l.numColumns; c++) {
             msg += l.encryptBlock(); 
          }
       }
     return msg;
      
}




